#version 460
#extension GL_EXT_ray_tracing : require
layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1) buffer bits_output
{
    uint out_buffer[];
};
layout(binding = 2) uniform u_obj_obj {
    vec3 camera_pos;
    ivec2 screen_size;
    int primitives_count;
    int data_count;
    int normals_count;
    int composed_object_nodes_count;
    int STACK_SIZE;
    int batches_count;
} ubo;

layout(location = 0) rayPayloadEXT uint prd;
void main() {
    
    
    float horizontal_step = 2.0/ubo.screen_size.x;
    float vertical_step = 2.0 /ubo.screen_size.y;
    
    vec3 rayOrigin = ubo.camera_pos;

    ivec2 pixel_coord = ivec2(gl_LaunchIDEXT.x, gl_LaunchIDEXT.y);
    vec3 rayDirection = vec3(-1 + pixel_coord.x * horizontal_step, 1, -1 + pixel_coord.y * vertical_step);

    uint IDX = gl_LaunchIDEXT.x + gl_LaunchIDEXT.y * gl_LaunchSizeEXT.x;
    for (int i = 0; i < ubo.primitives_count / 32; ++i)
        out_buffer[(IDX * ubo.primitives_count)/32 + i] = 0;

    traceRayEXT(
        topLevelAS,
        gl_RayFlagsNoOpaqueEXT,
        0xFF, // Cull mask
        0,    // SBT record offset
        0,    // SBT record stride
        0,    // Miss index
        rayOrigin,
        0.001,
        rayDirection,
        10000.0, // A large distance to ensure the ray can travel far
        0
    );

    
    return;
}