
//предполагаем что баундинг боксы не пересекаются хотя мало ли
uniform int object_from_which_look;
uniform int object_on_what_look;

uniform vec3 from_object_position;
uniform vec3 to_object_position;

uniform vec3 from_object_bounding_box;
uniform vec3 on_object_bounding_box;

uniform float DENSITY;
uniform ivec3 LIN_SIZE1;
uniform ivec3 LIN_SIZE2;

struct VecPair
{
	vec3 first;
	vec3 second;
};

bool isItObjectOrItsChild(int checking_index, int target_index)
{
	while (checking_index > 0)
	{
		if (checking_index == target_index)
			return true;
		checking_index = ComposedObjectNode_parent(unused_arg, checking_index);
	}
	return false;
}

bool checkVisibility()
{
	vec3 from_bb = from_object_bounding_box;
	vec3 on_bb = on_object_bounding_box;

	vec3 from_pos = from_object_position;
	vec3 on_pos = to_object_position;

	uint dir_ind = gl_GlobalInvocationID.z / 6;
	uint dir_ind2 = gl_GlobalInvocationID.z % 6;

	vec3 dirs[6] = { {1,0,0}, {0, 1, 0}, {0, 0, 1}, {-1, 0, 0}, {0, -1, 0}, {0, 0, -1} };
	VecPair oct_dirs[6] = { {{0, 1, 0}, {0,0,1}}, {{1,0,0},{0,0,1}}, {{1,0,0},{0,1,0}}, {{0, 1, 0}, {0,0,1}}, {{1,0,0},{0,0,1}}, {{1,0,0},{0,1,0}} };
		
	vec3 edg_cen = from_pos + dirs[dir_ind] * abs(dot(from_bb, dirs[dir_ind])) * 1.01;
	uint x1 = gl_GlobalInvocationID.x / LIN_SIZE1.x;
	uint y1 = gl_GlobalInvocationID.y / LIN_SIZE1.y;
	uint x2 = gl_GlobalInvocationID.x % LIN_SIZE1.x;
	uint y2 = gl_GlobalInvocationID.y % LIN_SIZE1.y;

	vec3 p1 = edg_cen + oct_dirs[dir_ind].first * float(dot(from_bb, oct_dirs[dir_ind].first) - DENSITY * x1) + oct_dirs[dir_ind].second * float(dot(from_bb, oct_dirs[dir_ind].second) - DENSITY * y1);

	vec3 edg_cen2 = on_pos + dirs[dir_ind2] * dot(on_bb, dirs[dir_ind2]) * 1.01 ;
	vec3 p2 = edg_cen2 + oct_dirs[dir_ind2].first * float(dot(on_bb, oct_dirs[dir_ind2].first) - DENSITY * x2) + oct_dirs[dir_ind2].second * float(dot(on_bb, oct_dirs[dir_ind2].second)  - DENSITY * y2);

	bool has_intersection = false;
	FullIntersectionResult isr = intersectWithRay(p1, p2 - p1, has_intersection);
	if (has_intersection && isItObjectOrItsChild(isr.object_index, object_on_what_look))
		return true;

	return false;
}

void main()
{
	if (gl_GlobalInvocationID.x > LIN_SIZE1.x * LIN_SIZE2.x || gl_GlobalInvocationID.y > LIN_SIZE1.y * LIN_SIZE2.y)
		return;
	if (checkVisibility())
		imageStore(img_output, ivec2(0,0), vec4(1, 0, 0, 0));
}




